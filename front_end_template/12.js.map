{"version":3,"sources":["webpack:///./src/containers/Users.js"],"names":["User","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","GridList","gridProperties","dispatch","GetUserList","GetDetails","id","GetUserDetails","UpdateEntity","handleNewDialog","bool","setState","isOpenDialog","handleSave","data","console","log","state","GridProperties","grid","search","sort_column","sort_direction","start","limit","columns","first_name","name","sortable","defaultActive","last_name","email","role","func","formatValue","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","status","actions","key","item","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_9__","onClick","_","capitalize","_this3","_this$props","_this$props$user$list","user","list","count","activeData","_this$props$entity","entity","_material_ui_core_Container__WEBPACK_IMPORTED_MODULE_12__","disableGutters","maxWidth","type","Fragment","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11__","color","variant","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_10__","className","_App_hocs_PageTableWrapper__WEBPACK_IMPORTED_MODULE_17__","rows","onGridList","_components_Dialogs_UserDialog__WEBPACK_IMPORTED_MODULE_14__","handleClose","_App_hocs_DetailsWrapper__WEBPACK_IMPORTED_MODULE_15__","PureComponent","connect","userSelector","ContainerWrapper"],"mappings":"+UA0BMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,IACjBE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAO,KAAAH,KAAMH,KAgCTO,SAAW,SAACC,GACXP,EAAKD,MAAMS,SAASC,YAAYF,KAlCbP,EAqCpBU,WAAa,SAACC,GACbX,EAAKD,MAAMS,SAASI,YAAeD,IACnCX,EAAKD,MAAMS,SAASK,YAAa,UAvCdb,EAuDpBc,gBAAkB,SAACC,GAClBf,EAAKgB,UACJC,aAAcF,KAzDIf,EA6DpBkB,WAAa,SAACC,GACbnB,EAAKgB,UACJC,cAAc,GACZ,WACFG,QAAQC,IAAI,oBA9DXrB,EAAKsB,OACHL,cAAc,GAGlBjB,EAAKuB,gBACJC,MAAM,EACNC,OAAQ,GACRC,YAAa,OACbC,eAAgB,OAChBC,MAAO,EACPC,MAAO,IAGR7B,EAAK8B,SACJC,YAAcC,KAAM,aAAcC,UAAU,EAAMC,eAAe,GACjEC,WAAaH,KAAM,YAAaC,UAAU,GAC1CG,OAASJ,KAAM,QAASC,UAAU,GAClCI,MAAQL,KAAM,OAAQM,KAAMtC,EAAKuC,YAAYC,KAAjBC,IAAAzC,GAA4B,QAASiC,UAAU,GAC3ES,QAAUV,KAAM,SAAUC,UAAU,GACpCU,SACCX,KAAM,UACNM,KAAMtC,EAAKuC,YAAYC,KAAjBC,IAAAzC,GAA4B,aAxBjBA,mEA8BnBE,KAAKI,SAASJ,KAAKqB,oDAYRqB,EAAKC,GAAM,IAAAC,EAAA5C,KACtB,MAAY,YAAR0C,EAEFG,EAAAC,EAAAC,cAACC,EAAA,GACAC,QAAS,kBAAML,EAAKpC,WAAWmC,EAAKlC,MADrC,kBAKU,SAARiC,EACIG,EAAAC,EAAAC,cAAA,YAAOG,IAAEC,WAAWR,EAAKD,UADjC,mCAsBQ,IAAAU,EAAApD,KACEe,EAAiBf,KAAKoB,MAAtBL,aADFsC,EAEiErD,KAAKH,MAFtEyD,EAAAD,EAEAE,KAAQC,KAAQvC,EAFhBqC,EAEgBrC,KAAMwC,EAFtBH,EAEsBG,MAAWC,EAFjCL,EAEiCK,WAFjCC,EAAAN,EAE6CO,cAF7C,IAAAD,EAEsD,OAFtDA,EAGN,OACDd,EAAAC,EAAAC,cAACc,EAAA,GAAUC,gBAAgB,EAAMC,UAAU,GAEd,WAApBL,EAAWM,KAETnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACNpB,EAAAC,EAAAC,cAACmB,EAAA,GACAC,MAAM,UACNC,QAAQ,YACRnB,QAAS,kBAAMG,EAAKxC,iBAAgB,KAHrC,YAOQiC,EAAAC,EAAAC,cAACsB,EAAA,GAAMC,UAAU,yBACfzB,EAAAC,EAAAC,cAACwB,EAAA,GACTC,KAAMvD,EACNwC,MAAOA,EACP7B,QAAS5B,KAAK4B,QACdvB,eAAgBL,KAAKqB,eACrBoD,WAAYzE,KAAKI,WAGPW,EACA8B,EAAAC,EAAAC,cAAC2B,EAAA,GACC1D,WAAYhB,KAAKgB,WACjB2D,YAAa3E,KAAKY,kBACf,OAMXiC,EAAAC,EAAAC,cAAC6B,EAAA,GACC3D,KAAMyC,EACNE,OAAQA,YA9GLiB,iBAuHJC,sBAAQC,IAARD,CAAsBE,YAAiBpF","file":"12.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\n\n// Material UI Core //\nimport Icon from '@material-ui/core/Icon'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\n\n// selector\nimport { userSelector } from '../redux/selectors'\n\n// Dialogs //\nimport UserDialog from '../components/Dialogs/UserDialog'\n\n// Wrappers //\nimport DetailsWrapper from '../App/hocs/DetailsWrapper'\nimport ContainerWrapper from '../App/hocs/ContainerWrapper'\nimport PageTableWrapper from '../App/hocs/PageTableWrapper'\nimport {\n\tGetUserList,\n\tGetUserDetails,\n\tUpdateEntity\n} from '../redux/actions'\n\nclass User extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpenDialog: false\n    }\n\n\t\tthis.GridProperties = {\n\t\t\tgrid: true,\n\t\t\tsearch: '',\n\t\t\tsort_column: 'name',\n\t\t\tsort_direction: 'desc',\n\t\t\tstart: 0,\n\t\t\tlimit: 10\n\t\t}\n\n\t\tthis.columns = {\n\t\t\tfirst_name: { name: 'First Name', sortable: true, defaultActive: true},\n\t\t\tlast_name: { name: 'Last Name', sortable: true},\n\t\t\temail: { name: 'Email', sortable: true},\n\t\t\trole: { name: 'Role', func: this.formatValue.bind(this, 'role'), sortable: true},\n\t\t\tstatus: { name: 'Status', sortable: true},\n\t\t\tactions: {\n\t\t\t\tname: 'Actions',\n\t\t\t\tfunc: this.formatValue.bind(this, 'actions')\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.GridList(this.GridProperties)\n\t}\n\n\tGridList = (gridProperties) => {\n\t\tthis.props.dispatch(GetUserList(gridProperties))\n\t}\n\n\tGetDetails = (id) => {\n\t\tthis.props.dispatch(GetUserDetails(id))\n\t\tthis.props.dispatch(UpdateEntity('user'))\n\t}\n\n\tformatValue(key, item) {\n\t\tif (key === 'actions') {\n\t\t\treturn (\n\t\t\t\t<Icon\n\t\t\t\t\tonClick={() => this.GetDetails(item.id)}\n\t\t\t\t>remove_red_eye</Icon>\n\t\t\t)\n\t\t}\n\t\tif (key === 'role') {\n\t\t\treturn <span>{_.capitalize(item[key])}</span>\n\t\t}\n\t}\n\n\thandleNewDialog = (bool) => {\n\t\tthis.setState({\n\t\t\tisOpenDialog: bool\n\t\t})\n\t}\n\n\thandleSave = (data) => {\n\t\tthis.setState({\n\t\t\tisOpenDialog: false\n\t\t}, () => {\n\t\t\tconsole.log('dispatching..')\n\t\t\t// dispatch here\n\t\t\t// example below:\n\t\t\t// dispatch(CreateUser(data))\n\t\t})\n\t}\n\n\trender() {\n    const { isOpenDialog } = this.state\n\t\tconst { user: { list: { data, count } }, activeData, entity = 'user' } = this.props\n    return (\n\t\t\t<Container disableGutters={true} maxWidth={false}>\n          {\n            activeData.type === 'parent'\n            ? (\n              <>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleNewDialog(true)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNew User\n\t\t\t\t\t\t\t\t</Button>\n                <Paper className='MuiPaper-tableWrapper'>\n                  <PageTableWrapper\n\t\t\t\t\t\t\t\t\t\trows={data}\n\t\t\t\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t\t\t\t\tcolumns={this.columns}\n\t\t\t\t\t\t\t\t\t\tgridProperties={this.GridProperties}\n\t\t\t\t\t\t\t\t\t\tonGridList={this.GridList}\n                  />\n                  {\n                    isOpenDialog ?\n                    <UserDialog \n                      handleSave={this.handleSave}\n                      handleClose={this.handleNewDialog}\n                    /> : null\n                  }\n                </Paper>\n              </>\n            )\n            : (\n              <DetailsWrapper\n                data={activeData}\n                entity={entity}\n              />\n            )\n          }\n        </Container>\n    )\n  }\n}\n\nexport default connect(userSelector)(ContainerWrapper(User))"],"sourceRoot":""}